[user]
  name = Uriah Adams
  email = adams.uriah@gmail.com
[github]
    user = nastycoder
[color]
# ui = true is a superset of all the more specific color options
#  as documented at http://book.git-scm.com/5_customizing_git.html
# When set to always, always use colors in all git commands which are capable of colored output.
# When false, never. When set to true or auto, use colors only when the output is to the terminal.
# When more specific variables of color.* are set, they always take precedence over this setting.
# Defaults to false.
  ui = auto
  # diff = auto
  # status = auto
  # branch = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = red
  untracked = cyan

[advice]
  statusHints = false

[gui]
  fontdiff = -family Monaco -size 10 -weight normal -slant roman -underline 0 -overstrike 0

[core]
  excludesfile = ~/.gitignore
  quotepath = false
  editor = vim

[alias]
  # most commonly used
  co = checkout
  d = diff --color-words
  cam = commit -a -m
  upm = !git fetch upstream && git merge upstream/master

  # least used
  br = branch -a
  s = status -s -u
  c = commit
  who = shortlog -s --
  ph = push
  pl = pull
  lp = log -p
  lod = log --oneline --decorate
  lg = log --graph
  sync = !git pull && git push
  ignorechanges = update-index --assume-unchanged
  noticechanges = update-index --no-assume-unchanged
  listconf = config --global --list
  diffall = diff HEAD
  scrub = !git reset --hard && git clean -fd
  rv = remote -v
  pur = pull --rebase
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  st = status
  purgeme = !git clean -fd && git reset --hard
  prunenow = gc --prune=now
  ri = rebase --interactive --autosquash
  ro = !git fetch origin && git reset --hard origin/master
  showignored = clean -ndX
  showignored2 = ls-files --others --ignored --exclude-standard
  showuntracked = ls-files --others --exclude-standard
  rmmissing = !git rm $(git ls-files --deleted)
  redocommit = reset --soft HEAD^

  fixup = "!sh -c 'git commit -m \"fixup! $(git log -1 --format='\\''%s'\\'' $@)\"' -"
  squash = "!sh -c 'git commit -m \"squash! $(git log -1 --format='\\''%s'\\'' $@)\"' -"
  cob = checkout -b
  sno = show --name-only
  logsimple = log --graph --abbrev-commit --pretty=oneline --all --decorate

[apply]
  whitespace = nowarn

#Enable the recording of resolved conflicts, so that identical hunks can be resolved automatically later on
[rerere]
  enabled = 1

[difftool]
  prompt = false
[diff]
  #tool = myaraxis
  tool = diffmerge
[init]
  templatedir = ~/.dotfiles/.git_template
[mergetool]
  prompt = false
  keepBackup = false
[difftool "diffmerge"]
  cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[mergetool "diffmerge"]
  cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
  trustExitCode = true
[merge]
  tool = diffmerge
  # Always show a diffstat at the end of a merge
  stat = true
[branch]
  # Automatically set up pull to be --rebase
  # autosetuprebase = always
[credential]
  # cache creds (git help credential-cache)
  helper = cache
[filter "tabspace"]
  clean = expand -t 4
[push]
  default = matching
[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
